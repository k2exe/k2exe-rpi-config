---
# file: fldigi/main.yml
- name: Install hamlib first if required
  ansible.builtin.import_playbook: ../hamlib/main.yml

- name: Fldigi
  hosts: localhost
  connection: localhost
  tasks:
    - name: Get installed fldigi version # noqa risky-shell-pipe
      ansible.builtin.shell: |
        if hash fldigi 2>/dev/null; then
            fldigi --version | awk 'FNR == 1 {print $2 }'
        else echo "NOT INSTALLED"
        fi
      register: fldigi_version
      changed_when: false
    - name: Debug installed fldigi version
      ansible.builtin.set_fact:
        fldigi: "{{ fldigi_version.stdout }}"

    - name: Check latest fldigi version from sourceforge # noqa risky-shell-pipe
      ansible.builtin.shell: |
        curl -s https://sourceforge.net/projects/fldigi/files/fldigi/ | grep .tar.gz | head -1 | awk -F "-" '{print $2}' | awk -F ".tar" '{print $1}'
      register: fldigi_online
      changed_when: false

    - name: Debug latest fldigi version
      ansible.builtin.set_fact:
        newfldigi: "{{ fldigi_online.stdout }}"

    - name: Install or update to the latest version of fldigi
      ansible.builtin.set_fact:
        fldigi_install: "{{ 'true' if (fldigi != newfldigi) else 'false' }}"

    - name: Debug install status
      ansible.builtin.debug:
        msg: "{{ fldigi_install }}"

    - name: Install fldigi dependencies
      become: true
      ansible.builtin.apt:
        pkg:
          - cmake
          - build-essential
          - libusb-1.0-0-dev
          - libltdl-dev
          - libudev-dev
          - libusb-1.0-0
          - libsamplerate0
          - libsamplerate0-dev
          - libsigc++-2.0-dev
          - libpopt-dev
          - tcl8.6-dev
          - libspeex-dev
          - libasound2-dev
          - alsa-utils
          - libgcrypt20-dev
          - libfltk1.3-dev
          - libpng++-dev
          - portaudio19-dev
          - libpulse-dev
          - libportaudiocpp0
          - libsndfile1-dev
          - pavucontrol
          - extra-xdg-menus
        update_cache: true
        cache_valid_time: 3600
      when: fldigi_install

    - name: Download fldigi and extract
      ansible.builtin.unarchive:
        src: https://sourceforge.net/projects/fldigi/files/fldigi/fldigi-{{ newfldigi }}.tar.gz
        dest: "{{ ansible_env.HOME }}/Downloads/"
        remote_src: true
        creates: "{{ ansible_env.HOME }}/Downloads/fldigi-{{ newfldigi }}"
      when: fldigi_install

    - name: ./configure fldigi
      ansible.builtin.command:
      args:
        chdir: "{{ ansible_env.HOME }}/Downloads/fldigi-{{ newfldigi }}"
        cmd: ./configure
        creates: "{{ ansible_env.HOME }}/Downloads/fldigi-{{ newfldigi }}/config.status"
      when: fldigi_install

    - name: Make fldigi
      ansible.builtin.command:
      args:
        chdir: "{{ ansible_env.HOME }}/Downloads/fldigi-{{ newfldigi }}"
        cmd: make -j{{ ansible_facts['processor_count'] }}
        creates: "{{ ansible_env.HOME }}/Downloads/fldigi-{{ newfldigi }}/src/fldigi"
      when: fldigi_install

    - name: Install fldigi
      become: true
      ansible.builtin.command:
      args:
        chdir: "{{ ansible_env.HOME }}/Downloads/fldigi-{{ newfldigi }}"
        cmd: make install
        creates: /usr/local/bin/fldigi
      when: fldigi_install

    - name: Install fldigi desktop icon
      ansible.builtin.copy:
        src: fldigi.desktop
        dest: "{{ ansible_env.HOME }}/Desktop/fldigi.desktop"
        mode: "0644"
      when: fldigi_install
