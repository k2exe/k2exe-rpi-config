---
# file: tqsl/main.yml
- name: Tqsl
  hosts: localhost
  connection: localhost
  tasks:
    - name: Get installed tqsl version # noqa risky-shell-pipe
      ansible.builtin.shell: |
        if hash tqsl 2>/dev/null; then
            tqsl --version 2>$1 | awk 'FNR == 1 {print $3}'
        else
            echo "NOT INSTALLED"
        fi
      register: tqsl_version
      changed_when: false
    - name: Debug installed tqsl version
      ansible.builtin.set_fact:
        tqsl: "{{ tqsl_version.stdout }}"
    - name: Check latest tsql version from arrl # noqa risky-shell-pipe
      ansible.builtin.shell: curl -s http://www.arrl.org/tqsl-download | grep .tar.gz | head -1 | awk -F "-" '{print $2}' | awk -F ".tar.gz" '{print $1}'
      register: tqsl_online
      changed_when: false
    - name: Set latest tqsl version
      ansible.builtin.set_fact:
        newtqsl: "{{ tqsl_online.stdout }}"

    - name: Set_tqsl install
      ansible.builtin.set_fact:
        tqsl_install: "{{ 'true' if ( tqsl != newtqsl ) else 'false' }}"
    - name: debug tqsl_install
      ansible.builtin.debug: 
        msg: "{{ tqsl_install }}"

    - name: Install tqsl dependencies
      become: true
      ansible.builtin.apt:
        pkg:
          - libdb-dev
          - liblmdb-dev
          - libwxgtk3.0-gtk3-dev
          - libcurl4-openssl-dev
          - libssl-dev
        update_cache: true
        cache_valid_time: 3600
      when: tqsl_install

    - name: Download tqsl and extract
      ansible.builtin.unarchive:
        src: http://www.arrl.org/tqsl/tqsl-{{ newtqsl }}.tar.gz
        dest: "{{ ansible_env.HOME }}/Downloads/"
        remote_src: true
        creates: "{{ ansible_env.HOME }}/Downloads/tqsl-{{ newtqsl }}"
      when: tqsl_install

    - name: Cmake tqsl
      ansible.builtin.command:
      args:
        chdir: "{{ ansible_env.HOME }}/Downloads/tqsl-{{ newtqsl }}"
        cmd: cmake -j{{ ansible_facts['processor_count'] }} .
        creates: "{{ ansible_env.HOME }}/Downloads/tqsl-{{ newtqsl }}/CmakeFiles/CMakeDirectoryInformation.cmake"
      when: tqsl_install

    - name: Make tqsl
      ansible.builtin.command:
      args:
        chdir: "{{ ansible_env.HOME }}/Downloads/tqsl-{{ newtqsl }}"
        cmd: make -j{{ ansible_facts['processor_count'] }}
        creates: "{{ ansible_env.HOME }}/Downloads/tqsl-{{ newtqsl }}/app/tqsl"
      when: tqsl_install

    - name: Install tqsl
      become: true
      ansible.builtin.command:
      args:
        chdir: "{{ ansible_env.HOME }}/Downloads/tqsl-{{ newtqsl }}"
        cmd: make install
      changed_when: false
      when: tqsl_install
