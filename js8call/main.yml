---
# file: js8call/main.yml
- name: Js8call
  hosts: localhost
  connection: localhost
  tasks:
    - name: Get installed js8call version # noqa risky-shell-pipe
      ansible.builtin.shell: |
        if hash js8call 2>/dev/null; then
            apt-cache policy js8call | awk  'FNR == 2 {print $2}'
        else echo "NOT INSTALLED"
        fi
      register: js8call_version
      changed_when: false
    - name: Set js8call installed version
      ansible.builtin.set_fact:
        js8call: "{{ js8call_version.stdout }}"

    - name: Latest js8call version check # noqa risky-shell-pipe
      ansible.builtin.shell: |
        curl -s http://files.js8call.com/latest.html | grep "<strong>" |
        grep -oP "(\d+)([.]\d+)+"
      register: js8call_online
      changed_when: false
    - name: Set latest js8call version
      ansible.builtin.set_fact:
        newjs8call: "{{ js8call_online.stdout }}"

    - name: Get js8call download link # noqa risky-shell-pipe
      ansible.builtin.shell: |
        curl -s http://files.js8call.com/latest.html |
        grep -oP "(http://files.js8call.com/)(\d+)([.]\d+)+(/js8call-)(\d+)([.]\d+)+(\.tgz)" | head -n 1
      register: js8call_download
      changed_when: false
    - name: Set installed js8call version
      ansible.builtin.set_fact:
        js8call_url: "{{ js8call_download.stdout }}"

    - name: Install js8call if not installed
      ansible.builtin.set_fact:
        js8call_install: "{{ 'true' if (js8call != js8call_online) else 'false' }}"
    - name: Debug js8call_install
      ansible.builtin.debug:
        msg: "{{ js8call_install }}"

    - name: Install js8call dependencies
      become: true
      ansible.builtin.apt:
        pkg:
          - autoconf
          - automake
          - cmake
          - clang
          - extra-xdg-menus
          - gfortran
          - libfftw3-dev
          - libgfortran-10-dev
          - libqt5multimedia5
          - libqt5multimedia5-plugins
          - libqt5multimediawidgets5
          - libqt5serialport5
          - libtool
          - libudev-dev
          - libusb-1.0-0-dev
          - pkg-config
          - qtmultimedia5-dev
          - texinfo
        update_cache: true
        cache_valid_time: 3600
      when: js8call_install

    - name: Import hamlib dependency
      ansible.builtin.import_playbook: ../hamlib/main.yml

    - name: Download js8call and extract
      ansible.builtin.unarchive:
        src: "{{ js8call_url }}"
        dest: "{{ ansible_env.HOME }}/Downloads/"
        remote_src: true
        creates: "{{ ansible_env.HOME }}/Downloads/js8call"
      when: js8call_install

    - name: Build folder
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/Downloads/js8call/build"
        state: directory
        mode: '0755'
        
    - name: Cmake js8call
      ansible.builtin.command:
      args:
        chdir: "{{ ansible_env.HOME }}/Downloads/js8call/build"
        cmd: cmake -j{{ ansible_fact['processor_count'] }} ..
        creates: "{{ ansible_env.HOME }}/Downloads/js8call/build/Makefile"
        
    - name: Make js8call
      ansible.builtin.command:
      args:
        chdir: "{{ ansible_env.HOME }}/Downloads/js8call/build"
        cmd: make -j{{ ansible_fact['processor_count'] }} ..
        creates: "{{ ansible_env.HOME }}/Downloads/js8call/build/js8call"

    - name: Make install
      become: true
      ansible.builtin.command:
      args:
        chdir: "{{ ansible_env.HOME }}/Downloads/js8call/build"
        cmd: make install
      changed_when: false 
      when: js8call_install
