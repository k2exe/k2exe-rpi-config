---
# file: jnos/main.yml
- name: Install and configure JNOS on raspberry pi
  hosts: localhost
  connection: localhost
  tasks:
    - name: Add nosuser
      become: true
      ansible.builtin.user:
        name: nosuser
        groups: sudo,adm
    - name: Install jnos dependencies
      become: true
      ansible.builtin.apt:
        pkg:
          - libssl-dev
          - libncurses5-dev
          - libncursesw5-dev
    - name: Download and extract archive
      ansible.builtin.unarchive:
        src: https://www.langelaar.net/projects/jnos2/downloads/linux/releases/jnos2.0m.current.tar.gz
        dest: /home/nosuser/Downloads/
        remote_src: true
        creates: /home/nosuser/Downloads/jnos2.0m.current/
    - name: ./configure jnos
      ansible.builtin.command:
        cmd: ./configure
        chdir: "{{ ansible_env.HOME }}/Downloads/jnos2.0m.current/rsync"
        creates: "{{ ansible_env.HOME }}/Downloads/jnos2.0m.current/rsync/configure.okay"
    - name: Make jnos
      ansible.builtin.command:
        cmd: make -j{{ ansible_facts['processor_count'] }}
        chdir: "{{ ansible_env.HOME }}/Downloads/jnos2.0m.current/rsync"
        creates: "{{ ansible_env.HOME }}/Downloads/jnos2.0m.current/rsync/jnosinstaller"
    - name: Move installer
      ansible.builtin.copy: 
        src: {{ item.src }}
        dest: {{ item.dest }}
        mode: '0755'
      with_items:
        - {src: '{{ ansible_env.HOME }}/Downloads/jnos2.0m.current/rsync/jnos', dest: '{{ ansible_env.HOME }}/jnos2.0m.current/rsync/installerv2.1'}
        - {src: '{{ ansible_env.HOME }}/Downloads/jnos2.0m.current/rsync/jnosinstaller', dest: '{{ ansible_env.HOME }}/jnos2.0m.current/rsync/installerv2.1'}
### Perform custom install
#    - name: install jnos
#      become: true
#      ansible.builtin.command:
#        cmd: "{{ ansible_env.HOME }}/Downloads/jnos2.0m.current/rsync/jnosinstaller"
#        chdir: "{{ ansible_env.HOME }}/Downloads/jnos2.0m.current/rsync"
